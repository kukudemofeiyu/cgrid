<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.things.cgomp.order.mapper.OrderInfoMapper">

    <select id="selectOrders" resultType="com.things.cgomp.order.vo.OrderVo">
        select
            o.*,
            s.operator_id,
            s.id siteId,
            s.name siteName,
            d.sn pileSn,
            dp.name portName,
            op.name operatorName
        from order_info o
            left join device_site s on s.id = o.site_id
            left join device_info d on d.device_id = o.pile_id
            left join device_info dp on dp.device_id = o.port_id
            left join system_user_site us on us.site_id = s.id
            left join system_operator op on op.operator_id = s.operator_id
            left join system_user_operator uop on uop.operator_id = s.operator_id
        where 1 = 1
        <if test="ownOccupy != null">
            and
            <if test="ownOccupy == 0">
                not
            </if>
            EXISTS (
                select 1 from order_info co where co.parent_id = o.id
            )
        </if>
        <if test="endReasonCode != null">
            and o.end_reason_code = #{endReasonCode}
        </if>
        <if test="orderState == 1">
            and o.real_end_time is null
        </if>
        <if test="orderState == 2">
            and o.real_end_time is not null
        </if>
        <if test="abnormalStatusList != null and abnormalStatusList.size() > 0">
            and o.abnormal_status in
            <foreach collection="abnormalStatusList" item="abnormalStatus" open="(" separator="," close=")">
                #{abnormalStatus}
            </foreach>
        </if>
        <if test="processSteps != null and processSteps.size() > 0">
            and o.process_step in
            <foreach collection="processSteps" item="processStep" open="(" separator="," close=")">
                #{processStep}
            </foreach>
        </if>
        <if test="orderType != null">
            and o.order_type = #{orderType}
        </if>
        <if test="refundStatus != null">
            and o.refund_status = #{refundStatus}
        </if>
        <if test="payStatus != null">
            <if test="payStatus == 0 or payStatus == 1">
                and o.pay_status = #{payStatus}
                and o.refund_status = 0
            </if>
            <if test="payStatus == 2">
                and o.refund_status = 1
            </if>
        </if>
        <if test="sn != null and sn !=''">
            and o.sn like concat('%',#{sn},'%')
        </if>
        <if test="tradeSn != null and tradeSn !=''">
            and o.trade_sn like concat('%',#{tradeSn},'%')
        </if>
        <if test="siteName != null and siteName !=''">
            and s.name like concat('%',#{siteName},'%')
        </if>
        <if test="siteId != null">
            and s.id = #{siteId}
        </if>
        <if test="billType != null">
            and o.bill_type = #{billType}
        </if>
        <if test="phone != null and phone !=''">
            and o.phone like concat('%',#{phone},'%')
        </if>
        <if test="pileSn != null and pileSn !=''">
            and d.sn like concat('%',#{pileSn},'%')
        </if>
        <if test="payType != null">
            and o.pay_type = #{payType}
        </if>
        <if test="startTime != null">
            and o.create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            and o.create_time &lt;= #{endTime}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        group by o.id
        order by o.create_time desc
    </select>

    <select id="selectOrderBySn" resultType="com.things.cgomp.order.api.domain.OrderInfo">
        select
            *
        from order_info
        where sn = #{sn}
    </select>
    <select id="selectChargingOrderByUserId" resultType="com.things.cgomp.order.api.domain.OrderInfo">
        select
            *
        from order_info
        where user_id = #{userId}
          and order_type = 0
          and real_end_time is null
    </select>
    <select id="selectAppOrders" resultType="com.things.cgomp.order.api.vo.OrderAppVO">
        select
        o.id orderId,
        o.order_type orderType,
        o.sn orderNo,
        o.trade_sn tradeSn,
        o.port_id portId,
        o.create_time createTime,
        o.real_start_time startTime,
        o.real_end_time endTime,
        o.order_amount orderAmount,
        o.pay_amount payAmount,
        CASE
        WHEN o.real_end_time is null THEN o.order_amount
        WHEN o.real_end_time is not null THEN o.pay_amount
        ELSE 0 -- 默认值，根据需要调整
        END AS amount,
        o.consume_electricity energy,
        o.real_charging_time chargingTime,
        CASE
        WHEN o.real_end_time is null THEN 1
        WHEN o.pay_status = 1 or o.pay_status = 2 THEN 2
        when o.pay_amount  is not null and o.pay_status = 0 then 3
        ELSE 0
        END AS status,
        s.name siteName
        from order_info o
        left join device_site s on s.id = o.site_id
        where 1 = 1
          and o.user_id = #{userId}
        <if test="orderType != null">
            and o.order_type = #{orderType}
        </if>
        <if test="status == 1">
            and o.real_end_time is null
        </if>
        <if test="status == 2">
            and o.pay_status = 1 or o.pay_status = 2
        </if>
        <if test="status == 3">
            and o.pay_amount is not null
            and o.pay_status = 0
        </if>
        order by o.create_time desc
    </select>

    <select id="selectLatestUserId" resultType="java.lang.Long">
        select
            user_id
        from order_info o
        where o.user_id is not null
            and o.vin = #{vin}
        order by create_time desc limit 1
    </select>
    <select id="selectPayingOrderByUserId" resultType="com.things.cgomp.order.api.domain.OrderInfo">
        select
            *
        from order_info
        where user_id = #{userId}
          and order_type = 0
          and pay_amount is not null
          and pay_status = 0
    </select>

    <sql id="commonStatistics">
        count(1)                                 as order_num,
        count(1)                                 as charge_count,
        sum(IFNULL(rs.charge_fee, 0))            as charge_fee,
        sum(IFNULL(rs.service_fee, 0))           as service_fee,
        sum(IFNULL(rs.real_charging_time, 0))    as charge_time,
        sum(IFNULL(rs.consume_electricity, 0))   as consume_electricity
    </sql>

    <sql id="orderStatistics">
        select
            sum(rs.order_amount)                                                                                      as order_amount,
            sum(if(rs.pay_status = 1, rs.pay_amount, 0))                                                              as total_income,
            sum(if(rs.pay_status = 1, if(rs.refund_status = 1, rs.pay_amount - rs.refund_amount, rs.pay_amount), 0))  as real_income,
            sum(if(rs.refund_status = 1 and rs.refund_status is not null, rs.refund_amount, 0))                       as refund_amount,
            <include refid="commonStatistics"/>
        from (
            select
                distinct ord.*
            from order_info ord
                left join device_site s on s.id = ord.site_id
                left join device_info d on d.site_id = s.id
                left join system_user_site us on us.site_id = s.id
                left join system_operator op on op.operator_id = s.operator_id
                left join system_user_operator uop on uop.operator_id = s.operator_id
            where ord.order_type = 0 and ord.pay_status = 1
                <if test="operatorId != null">
                    and s.operator_id = #{operatorId}
                </if>
                <if test="siteId != null">
                    and ord.site_id = #{siteId}
                </if>
                <if test="pileId != null">
                    and ord.pile_id = #{pileId}
                </if>
                <if test="portId != null">
                    and ord.port_id = #{portId}
                </if>
                <if test="deviceSn != null">
                    and d.sn = #{deviceSn}
                </if>
                <if test="beginTime != null and beginTime != ''">
                    and ord.pay_time &gt;= #{beginTime}
                </if>
                <if test="endTime != null and endTime != ''">
                    and ord.pay_time &lt;= #{endTime}
                </if>
                <!-- 数据范围过滤 -->
                ${params.dataScope}
            ) as rs
    </sql>

    <select id="selectStatisticsTotalData" resultType="com.things.cgomp.order.api.domain.OrderStatisticsData">
        select
            r.order_num,
            r.charge_count,
            IFNULL(r.order_amount, 0)               as order_amount,
            IFNULL(r.total_income, 0)               as total_income,
            IFNULL(r.real_income, 0)                as real_income,
            IFNULL(r.refund_amount, 0)              as refund_amount,
            IFNULL(r.charge_fee, 0)                 as charge_fee,
            IFNULL(r.service_fee, 0)                as service_fee,
            IFNULL(r.charge_time, 0)                as charge_time,
            IFNULL(r.consume_electricity, 0)        as consume_electricity
        from (
            <include refid="orderStatistics"/>
        ) as r
    </select>

    <sql id="deviceStatus">
        (cs.status = 1 and now() > cs.valid_time) or cs.`status` = 0 or cs.valid_time is null
    </sql>

    <sql id="dataScopeOrderDevice">
        select distinct
            d.device_id, d.name, d.sn, s.id site_id, s.name site_name,
            o.id order_id, o.order_amount, o.charge_fee, o.service_fee, o.real_charging_time, o.consume_electricity,
            IF(<include refid="deviceStatus"/>, 0, 1) run_status
        from device_info d
            left join device_connect_status cs on cs.device_id = d.device_id
            left join device_site s on s.id = d.site_id
            left join system_user_site us on us.site_id = s.id
            left join system_operator op on op.operator_id = s.operator_id
            left join system_user_operator uop on uop.operator_id = s.operator_id
            left join order_info o on o.pile_id = d.device_id and o.order_type = 0 and o.pay_status = 1
        where d.component = 0
            <if test="operatorId != null">
                and s.operator_id = #{operatorId}
            </if>
            <if test="siteId != null">
                and d.site_id = #{siteId}
            </if>
            <if test="deviceSn != null">
                and d.sn = #{deviceSn}
            </if>
            <if test="beginTime != null and beginTime != ''">
                and o.pay_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and o.pay_time &lt;= #{endTime}
            </if>
            <if test="runStatus == 0">
                and IF(<include refid="deviceStatus"/>, true, false)
            </if>
            <if test="runStatus == 1">
                and IF(<include refid="deviceStatus"/>, false, true)
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
    </sql>

    <select id="selectStatisticsDeviceData" resultType="com.things.cgomp.order.api.domain.OrderStatisticsData">
        select
            rs.device_id                       as device_id,
            rs.name                            as device_name,
            rs.sn                              as device_sn,
            rs.site_id                         as site_id,
            rs.site_name                       as site_name,
            rs.run_status                      as run_status,
            sum(IFNULL(rs.order_amount, 0))    as order_amount,
            <include refid="commonStatistics"/>
        from (
            <include refid="dataScopeOrderDevice"/>
        ) rs
        group by rs.site_id, rs.device_id
    </select>

    <select id="selectChildOrders" resultType="com.things.cgomp.order.api.domain.OrderInfo">
        select
            *
        from order_info
        where parent_id in
        <foreach collection="parentIds" item="parentId" open="(" separator="," close=")">
            #{parentId}
        </foreach>
    </select>
    
    <sql id="dataScopeOrder">
        select
            distinct ord.*
        from order_info ord
            left join device_site s on s.id = ord.site_id
            left join system_user_site us on us.site_id = s.id
            left join system_operator op on op.operator_id = s.operator_id
            left join system_user_operator uop on uop.operator_id = s.operator_id
        where ord.order_type = 0 and ord.pay_status = 1
        <if test="siteId != null">
            and ord.site_id = #{siteId}
        </if>
        <if test="pileId != null">
            and ord.pile_id = #{pileId}
        </if>
        <if test="portId != null">
            and ord.port_id = #{portId}
        </if>
    </sql>

    <select id="selectDateTrendData" resultType="com.things.cgomp.order.api.domain.OrderTrendDateData">
        select date_help.date,
               IFNULL(rs.charge_count, 0)        as charge_count,
               IFNULL(rs.order_amount, 0)        as order_amount,
               IFNULL(rs.consume_electricity, 0) as consume_electricity,
               IFNULL(rs.charge_time, 0)         as charge_time
        from (
                select
                    date_add(date_sub(#{beginDate}, INTERVAL 1 DAY), INTERVAL (cast(help_topic_id AS signed INTEGER) + 1) DAY) `date`
                from mysql.help_topic
                where help_topic_id &lt; DATEDIFF(#{endDate}, date_sub(#{beginDate}, INTERVAL 1 DAY))
             ) date_help
        left join (
                select
                      DATE(o.pay_time)           as pay_date,
                      count(o.id)                as charge_count,
                      sum(o.order_amount)        as order_amount,
                      sum(o.consume_electricity) as consume_electricity,
                      sum(o.real_charging_time)  as charge_time
                from (
                        <include refid="dataScopeOrder"/>
                        and DATE(ord.pay_time) BETWEEN #{beginDate} AND #{endDate}
                        <!-- 数据范围过滤 -->
                        ${params.dataScope}
                    ) o
                group by DATE(o.pay_time)
                ) rs on date_help.date = rs.pay_date
        order by date_help.date;
    </select>

    <select id="selectHourTrendData" resultType="com.things.cgomp.order.api.domain.OrderTrendHourData">
        select time_help.`hour`,
               IFNULL(rs.charge_count, 0)         as charge_count,
               IFNULL(rs.order_amount, 0)         as order_amount,
               IFNULL(rs.consume_electricity, 0)  as consume_electricity,
               IFNULL(rs.charge_time, 0)          as charge_time
        from (
                select @a := @a + 1 AS `index`, DATE_FORMAT(ADDDATE(sysdate(), INTERVAL @a HOUR), '%H:00') AS `hour`
                from mysql.help_topic, (SELECT @a := 0) temp
                limit 24
             ) time_help
        left join (
                select
                    date_format(o.pay_time, '%H:00') as `hour`,
                    count(o.id)                      as charge_count,
                    sum(o.order_amount)              as order_amount,
                    sum(o.consume_electricity)       as consume_electricity,
                    sum(o.real_charging_time)        as charge_time
                from (
                        <include refid="dataScopeOrder"/>
                        and DATE(ord.pay_time) = #{beginDate}
                        <!-- 数据范围过滤 -->
                        ${params.dataScope}
                    ) o
                group by date_format(o.pay_time, '%H:00')
        ) rs on time_help.`hour` = rs.`hour`
        order BY time_help.`hour`;
    </select>

    <select id="selectUserTrendData" resultType="com.things.cgomp.order.api.domain.OrderTrendUserData">
        select date_help.date,
               IFNULL(rs.user_count, 0)        as user_count
        from (
                 select
                     date_add(date_sub(#{beginDate}, INTERVAL 1 DAY), INTERVAL (cast(help_topic_id AS signed INTEGER) + 1) DAY) `date`
                 from mysql.help_topic
                 where help_topic_id &lt; DATEDIFF(#{endDate}, date_sub(#{beginDate}, INTERVAL 1 DAY))
             ) date_help
        left join (
                select
                    DATE(o.pay_time)           as pay_date,
                    count(o.user_id)           as user_count
                from (
                    <include refid="dataScopeOrder"/>
                    and ord.user_id is not null
                    and DATE(ord.pay_time) BETWEEN #{beginDate} AND #{endDate}
                    <!-- 数据范围过滤 -->
                    ${params.dataScope}
                    ) o
                group by DATE(o.pay_time)
        ) rs on date_help.date = rs.pay_date
    </select>

    <select id="selectDeviceOrderStatistics"
            resultType="com.things.cgomp.order.api.domain.DeviceOrderStatisticsData">
        select
        o.pile_id as deviceId,
        sum(IFNULL(o.charge_fee, 0)) as charge_fee,
        sum(IFNULL(o.service_fee, 0)) as service_fee,
        sum(IFNULL(o.real_charging_time, 0)) as charge_time,
        sum(IFNULL(o.consume_electricity, 0)) as consume_electricity
        from order_info o
        where
        1 = 1 and o.order_type = 0 and o.pay_status = 1 and o.pile_id in
        <foreach collection="pileIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        group by o.pile_id
    </select>

    <select id="selectOrdersBySns" resultType="com.things.cgomp.order.api.domain.OrderInfo">
        select
            *
        from order_info
        where sn in
        <foreach collection="sns" item="sn" open="(" separator="," close=")">
            #{sn}
        </foreach>
    </select>
    <select id="selectOrderByTradeNo" resultType="com.things.cgomp.order.api.domain.OrderInfo">
        select
            *
        from order_info
        where trade_sn = #{tradeSn}
        and order_type = 0
    </select>
</mapper>
